[{"O:\\nopsTest\\nops-task\\src\\index.js":"1","O:\\nopsTest\\nops-task\\src\\App.js":"2","O:\\nopsTest\\nops-task\\src\\auth\\UserContext.js":"3","O:\\nopsTest\\nops-task\\src\\routes-nav\\Navigation.js":"4","O:\\nopsTest\\nops-task\\src\\routes-nav\\Routes.js":"5","O:\\nopsTest\\nops-task\\src\\country-codes\\CountryCodes.js":"6","O:\\nopsTest\\nops-task\\src\\routes-nav\\PrivateRoute.js":"7","O:\\nopsTest\\nops-task\\src\\auth\\SignupForm.js":"8","O:\\nopsTest\\nops-task\\src\\auth\\LoginForm.js":"9","O:\\nopsTest\\nops-task\\src\\homepage\\Homepage.js":"10","O:\\nopsTest\\nops-task\\src\\common\\Alert.js":"11","O:\\nopsTest\\nops-task\\src\\api\\api.js":"12","O:\\nopsTest\\nops-task\\src\\common\\LoadingSpinner.js":"13","O:\\nopsTest\\nops-task\\src\\hooks\\useLocalStorage.js":"14","O:\\nopsTest\\nops-task\\src\\custom-modals\\CountryCodeModal.js":"15","O:\\nopsTest\\nops-task\\src\\country-codes\\CountryList.js":"16"},{"size":271,"mtime":1610651939778,"results":"17","hashOfConfig":"18"},{"size":3243,"mtime":1610652610678,"results":"19","hashOfConfig":"18"},{"size":184,"mtime":1609186520093,"results":"20","hashOfConfig":"18"},{"size":1574,"mtime":1609187377783,"results":"21","hashOfConfig":"18"},{"size":1566,"mtime":1610652661253,"results":"22","hashOfConfig":"18"},{"size":646,"mtime":1610404918163,"results":"23","hashOfConfig":"18"},{"size":843,"mtime":1609186805342,"results":"24","hashOfConfig":"18"},{"size":3758,"mtime":1609187785604,"results":"25","hashOfConfig":"18"},{"size":2762,"mtime":1609187767556,"results":"26","hashOfConfig":"18"},{"size":1325,"mtime":1609187527222,"results":"27","hashOfConfig":"18"},{"size":528,"mtime":1609802107108,"results":"28","hashOfConfig":"18"},{"size":1820,"mtime":1610654467207,"results":"29","hashOfConfig":"18"},{"size":285,"mtime":1610398892732,"results":"30","hashOfConfig":"18"},{"size":1046,"mtime":1610399065799,"results":"31","hashOfConfig":"18"},{"size":3615,"mtime":1610652708811,"results":"32","hashOfConfig":"18"},{"size":936,"mtime":1610653801040,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"vy5q0c",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"O:\\nopsTest\\nops-task\\src\\index.js",[],["68","69"],"O:\\nopsTest\\nops-task\\src\\App.js",[],"O:\\nopsTest\\nops-task\\src\\auth\\UserContext.js",[],"O:\\nopsTest\\nops-task\\src\\routes-nav\\Navigation.js",[],"O:\\nopsTest\\nops-task\\src\\routes-nav\\Routes.js",[],"O:\\nopsTest\\nops-task\\src\\country-codes\\CountryCodes.js",[],"O:\\nopsTest\\nops-task\\src\\routes-nav\\PrivateRoute.js",[],"O:\\nopsTest\\nops-task\\src\\auth\\SignupForm.js",[],"O:\\nopsTest\\nops-task\\src\\auth\\LoginForm.js",[],"O:\\nopsTest\\nops-task\\src\\homepage\\Homepage.js",[],"O:\\nopsTest\\nops-task\\src\\common\\Alert.js",[],"O:\\nopsTest\\nops-task\\src\\api\\api.js",[],"O:\\nopsTest\\nops-task\\src\\common\\LoadingSpinner.js",[],"O:\\nopsTest\\nops-task\\src\\hooks\\useLocalStorage.js",[],"O:\\nopsTest\\nops-task\\src\\custom-modals\\CountryCodeModal.js",["70"],"import \"./CountryCodeModal.css\"\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-modal';\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport CountryList from \"../country-codes/CountryList.js\";\r\n\r\nfunction CountryCodeModal({ addFavoriteCode }) {\r\n  const history = useHistory();\r\n  const [isOnlyEven, setIsOnlyEven] = useState(false);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n  const [allCountryCodes, setAllCountryCodes] = useState(null);\r\n  const [evenCountryCodes, setEvenCountryCodes] = useState(null);\r\n  const [infoLoaded, setInfoLoaded] = useState(false);\r\n  const [loadedIndex, setLoadedIndex] = useState(10);\r\n  const urlParam = useParams();\r\n\r\n  useEffect(function loadCountryInfo() {\r\n    // console.debug(\"CountryCodeModal useEffect loadCountryInfo\");\r\n\r\n    async function getCountryCodes() {\r\n      try {\r\n        const allCountryCodesResult = await axios.get(\r\n          `https://restcountries.eu/rest/v2/all?fields=name;alpha3Code`);\r\n        setAllCountryCodes(allCountryCodesResult.data);\r\n\r\n        const evenCountryCodes = allCountryCodesResult.data.filter(\r\n          (country, index) => index % 2 === 1\r\n        );\r\n        setEvenCountryCodes(evenCountryCodes);\r\n\r\n      } catch (err) {\r\n        console.error(\"CountryCodeModal loadCountryInfo: problem loading\", err);\r\n      }\r\n      setInfoLoaded(true);\r\n    }\r\n\r\n    // set infoLoaded to false while async getCurrentUser runs; once the\r\n    // data is fetched (or even if an error happens!), this will be set back\r\n    // to false to control the spinner.\r\n    setInfoLoaded(false);\r\n    getCountryCodes();\r\n  }, []);\r\n\r\n  function openModalA () {\r\n    history.push(\"/codes/a\");\r\n  }\r\n\r\n  function openModalB () {\r\n    history.push(\"/codes/b\");\r\n  }\r\n\r\n  // redirect to /codes on modal close\r\n  function closeModals() {\r\n    setIsOpen(false);\r\n    history.push(\"/codes\");\r\n  }\r\n\r\n  function handleChange(evt) {\r\n    setIsOnlyEven(value => !value);\r\n  }\r\n\r\n  function displayCountryCodes() {\r\n    // render CountryList once info is loaded, pass allCountryCodes based on\r\n    // url param\r\n    if (infoLoaded) {\r\n      if (urlParam.modal === 'a') {\r\n        if (isOnlyEven) {\r\n          return (\r\n            <CountryList \r\n              allCountryCodes={evenCountryCodes} \r\n              loadedIndex={loadedIndex}\r\n              addFavoriteCode={addFavoriteCode}\r\n          />);\r\n        } else {\r\n          return (\r\n            <CountryList \r\n              allCountryCodes={allCountryCodes} \r\n              loadedIndex={loadedIndex}\r\n              addFavoriteCode={addFavoriteCode}\r\n          />);\r\n        }\r\n      } else if (urlParam.modal === 'b') {\r\n        //TODO: display country list w/ user favorites\r\n      }\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Modal\r\n        isOpen={isOpen}\r\n        name=\"country-code-modal\"\r\n        className=\"modal\"\r\n        onRequestClose={closeModals}\r\n      >\r\n        <h2>Modal {urlParam.modal.toUpperCase()}</h2>\r\n        <button onClick={openModalA}>All country codes</button>\r\n        <button onClick={openModalB}>Favorite country codes</button>\r\n        <button onClick={closeModals}>Close</button>\r\n        <form>\r\n          <label>\r\n            Only Even\r\n            <input\r\n              name=\"onlyEven\"\r\n              type=\"checkbox\"\r\n              checked={isOnlyEven}\r\n              onChange={handleChange}\r\n            ></input>\r\n          </label>\r\n        </form>\r\n        {displayCountryCodes()}\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CountryCodeModal;","O:\\nopsTest\\nops-task\\src\\country-codes\\CountryList.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":15,"column":23,"nodeType":"77","messageId":"78","endLine":15,"endColumn":37},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'setLoadedIndex' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]